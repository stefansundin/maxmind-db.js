(()=>{"use strict";var t={default:class{async load(t){t instanceof ArrayBuffer?this.buffer=t:this.buffer=await t.arrayBuffer(),this.search_tree_size=void 0,this.data_section_start=void 0,this.ipv4_start=void 0,this._metadata=void 0}get metadata(){if(null!==this._metadata)return this._metadata;if(!this.buffer)throw new Error("Database not loaded");const t=this.string2Uint8Array("«ÍïMaxMind.com");let e;for(e=this.buffer.byteLength-t.length-1;e>this.buffer.byteLength-300&&!this.equal(new Uint8Array(this.buffer.slice(e,e+t.length)),t);e--);if(e===this.buffer.byteLength-300)throw new Error("Metadata section not found");const r=e+t.length,[,,n]=this.decode(r);return this._metadata=n,this.search_tree_size=2*n.record_size/8*n.node_count,this.data_section_start=this.search_tree_size+16,this._metadata}get(t){const e=this.packIP(t),[r]=this.record(e);return r}record(t){const[e,r]=this.find_address_in_tree(t);return 0===e?[null,r]:[this.resolve_data_pointer(e),r]}resolve_data_pointer(t){if(!this.buffer)throw new Error("Database not loaded");const e=t-this.metadata.node_count+this.search_tree_size;if(e>=this.buffer.byteLength)throw new Error("The search tree is corrupt");return this.decode(e)}find_address_in_tree(t){const e=8*t.byteLength,r=this.metadata.node_count,n=new DataView(t);let i=this.start_node(e),s=0;for(;!(s>=e||i>=r);){const t=1&n.getUint8(s>>>3)>>>7-s%8;i=this.read_node(i,t),s++}if(i===r)return[0,s];if(i>r)return[i,s];throw new Error("Invalid node in search tree")}start_node(t){if(128===t)return 0;if(this.ipv4_start)return this.ipv4_start;let e=0;if(6===this.metadata.ip_version)for(let t=0;t<96&&!(e>=this.metadata.node_count);t++)e=this.read_node(e,0);return this.ipv4_start=e,this.ipv4_start}read_node(t,e){if(!this.buffer)throw new Error("Database not loaded");const r=t*(this.metadata.record_size/4),n=this.metadata.record_size,i=new DataView(this.buffer);if(24===n){const t=0===e?r:r+3,n=new Uint8Array(4);return n[0]=0,n[1]=i.getUint8(t),n[2]=i.getUint8(t+1),n[3]=i.getUint8(t+2),new DataView(n.buffer).getUint32(0,!1)}if(28===n){if(0===e){const t=i.getUint32(r);return(240&t)<<20|t>>>8}return 268435455&i.getUint32(r+3)}if(32===n){const t=0===e?r:r+4;return i.getUint32(t)}throw new Error(`Unsupported record size: ${n}`)}decode(t){if(!this.buffer)throw new Error("Database not loaded");const e=new DataView(this.buffer);let r=e.getUint8(t);t+=1;let n=r>>>5,i=31&r;if(0===n&&(r=e.getUint8(t),t+=1,n=r+7),1===n){const i=r>>>3&3,s=7&r;let a=this.data_section_start;if(0===i){const r=new Uint8Array(2);r.set([s,e.getUint8(t)]),a+=new DataView(r.buffer).getUint16(0,!1)}else if(1===i){const r=new Uint8Array(4);r.set([0,s,e.getUint8(t),e.getUint8(t+1)]),a+=new DataView(r.buffer).getUint32(0,!1)+2048}else if(2===i){const r=new Uint8Array(4);r[0]=s,r[1]=e.getUint8(t),r[2]=e.getUint8(t+1),r[3]=e.getUint8(t+2),a+=new DataView(r.buffer).getUint32(0,!1)+526336}else 3===i&&(a+=e.getUint32(t));return[,,a]=this.decode(a),[n,t+i+1,a]}if(29===i)i=29+e.getUint8(t),t+=1;else if(30===i)i=285+e.getUint16(t),t+=2;else if(31===i){const r=new Uint8Array(4);r.set([0,e.getUint8(t),e.getUint8(t+1),e.getUint8(t+2)]),i=65821+new DataView(r.buffer).getUint32(0,!1),t+=3}if(2===n)return[n,t+i,new TextDecoder("utf-8").decode(new Uint8Array(this.buffer.slice(t,t+i)))];if(3===n){if(8!==i)throw new Error("Unsupported size of double");return[n,t+8,e.getFloat64(t,!1)]}if(5===n){let r;if(0===i)r=0;else if(1===i){const n=new Uint8Array(2);n[1]=e.getUint8(t),r=new DataView(n.buffer).getUint16(0,!1)}else{if(2!==i)throw new Error(`Unexpected size: ${i}`);r=e.getUint16(t,!1)}return[n,t+i,r]}if(6===n){let r;if(0===i)r=0;else if(4===i)r=e.getUint32(t,!1);else{if(i>4)throw new Error(`Unexpected size: ${i}`);{const n=new Uint8Array(4);for(let r=0;r<i;r++)n[4-i+r]=e.getUint8(t+r);r=new DataView(n.buffer).getUint32(0,!1)}}return[n,t+i,r]}if(7===n){const e={};for(let r=0;r<i;r++){let r,n,i,s;[r,t,n]=this.decode(t),[i,t,s]=this.decode(t),e[n]=s}return[n,t,e]}if(9===n){let r;if(0===i)r=0;else if(8===i)r=e.getBigUint64(t,!1);else{if(i>8)throw new Error(`Unexpected size: ${i}`);{const n=new Uint8Array(8);for(let r=0;r<i;r++)n[8-i+r]=e.getUint8(t+r);r=new DataView(n.buffer).getBigUint64(0,!1)}}return r<=Number.MAX_SAFE_INTEGER&&(r=Number(r)),[n,t+i,r]}if(11===n){const e=[];for(let r=0;r<i;r++){let r,n;[r,t,n]=this.decode(t),e.push(n)}return[n,t,e]}if(14===n)return[n,t,1===i];throw new Error(`Unknown type: ${n}`)}equal(t,e){if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}packIP(t){if(t.includes(".")){const e=t.split(".");if(4!==e.length)throw new Error("Invalid IP");const r=new Uint8Array(4);for(let t=0;t<4;t++){const n=parseInt(e[t],10);if(n<0||n>255||isNaN(n)||n.toString()!==e[t])throw new Error("Invalid IP");r[t]=n}return r.buffer}{const e=t.split(":");if(e.length>8)throw new Error("Invalid IP");const r=new Uint8Array(16);for(let t=0,n=0;t<e.length;t++,n++){if(e[t].length>4)throw new Error("Invalid IP");if(""===e[t]){if(0===t||t===e.length-1)continue;if(n+=8-e.length,n>8)throw new Error("Invalid IP");continue}const i=parseInt(e[t],16);if(i<0||i>65535||isNaN(i))throw new Error("Invalid IP");const s=new Uint16Array(1);s[0]=i;const a=new DataView(s.buffer);r[2*n]=a.getUint8(1),r[2*n+1]=a.getUint8(0)}return r.buffer}}string2Uint8Array(t){const e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}}};self.MaxMindDB=t.default})();
//# sourceMappingURL=MaxMindDB.min.js.map